Два варианта решения задачи: 
1. CourseWorkSimple - решение в лоб
    1.1 Формирование односвязанного списка библиотеки из тестового файла. Сортировка осуществляется в момент записи в список.
    1.2 Чтение по словам сообщения. Каждое слово ищется в библиотеке и выводится в соответсвующем заданию формате.
2. CourseWork
    2.1 Для того чтоб избежать многократного поиска нужного слова в библиотеке, создается еще один отсортированный односвязанный список для сообщения. 
    Таким образом мы гарантируем, что для поиска Всех слов одного сообщения, нам необходимо будет обойти список библиотеки НЕ более 1 раза. 
    2.2 Единственное, для того, чтобы вернуть нужный порядок слов в сообщении, нам придется список сообщения отсортировать еще один раз, после поиска, по другому ключу. Но сообщение в любом случае короче, чем библиотека слов.
3. В результате, при прочих равных, среднее время выполнения кода 
    CourseWorkSimple        119,3мкс
    CourseWork              31,5 мкс
    Учитывается только код поиска и вывода итогового сообщения для CourseWorkSimple, и код поиска, сортировки и вывода итогового сообщения для CourseWork. Общий код не учитывается.
    
P.S. Работа только с англ алфавитом.
P.P.S. в Jeany почему-то не удается сделать нормальные Header's. Поэтому сделано #include  "*.cxx" после обьявления.
